# Release artifact will be pushed to Sonatype, which is synced to
# Maven Central
name: Publish a release to Maven Central

on:
  # We can use very similiar workflow to manually trigger a full publish
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Release version'
        required: true
      nextversion:
        description: 'Next dev version'
        required: true

# Will need to have someone with admin permissions to add some secrets:
# Credentials for Sonatype, needs a Sonatype account. Use Jim's for testing?
#   - OSSRH_USERNAME
#   - OSSRH_TOKEN

jobs:
  publish:
    runs-on: ubuntu-latest
    # Can we check to make sure $NEXT doesn't already exist as a tag?
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java & Maven
        uses: actions/setup-java@v3
        with:
          java-version: 11
          server-id: ossrh
          # User/pass refer to ENV VARs set below
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      
      - name: Publish release
        # maven publish command goes here
        run: |
          mvn release:prepare -DreleaseVersion=$RELEASE -Dtag=$RELEASE -DdevelopmentVersion=$NEXT 
          mvn release:perform -Dgoals=deploy 
        env:
          # Add OSSRH_USERNAME and OSSRH_TOKEN as GH secrets
          # https://docs.github.com/en/actions/security-guides/encrypted-secrets
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          RELEASE: ${{ inputs.releaseversion }}
          NEXT: ${{ inputs.nextversion }}
